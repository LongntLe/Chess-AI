name: "Move3Net"
layers {
  name: "input"
  type: HDF5_DATA
  hdf5_data_param {
    batch_size: 1000
    source: "/data/ConvChess/data/FICS_2000+_elolayer_h5/move3_train.txt"
  }
  top: "data"
  top: "label"
}
layers {
    name: "conv1"
    type: CONVOLUTION
    blobs_lr: 1.
    blobs_lr: 2.
    bottom: "data"
    top: "conv1"
    convolution_param {
        num_output: 96
        kernel_size: 3
        pad: 1
        stride: 1    
     weight_filler {
      type: "gaussian" # initialize the filters from a Gaussian
      std: 0.01        # distribution with stdev 0.01 (default mean: 0)
     }
     bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0
      }
   }
}
layers {
    name: "relu1"
    type: RELU
    bottom: "conv1"
    top: "conv1"
}
layers {
    name: "conv2"
    type: CONVOLUTION
    blobs_lr: 1.
    blobs_lr: 2.
    bottom: "conv1"
    top: "conv2"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1

        weight_filler {
          type: "gaussian" # initialize the filters from a Gaussian
          std: 0.01        # distribution with stdev 0.01 (default mean: 0)
        }
        bias_filler {
            type: "constant" # initialize the biases to zero (0)
            value: 0.1
        }
    }
}
layers {
    name: "relu2"
    type: RELU
    bottom: "conv2"
    top: "conv2"
}
layers {
    name: "conv3"
    type: CONVOLUTION
    bottom: "conv2"
    top: "conv3"
    blobs_lr: 1.
    blobs_lr: 2.
    convolution_param {
        num_output: 384
        kernel_size: 3
        pad: 1
        stride: 1
    weight_filler {
      type: "gaussian" # initialize the filters from a Gaussian
      std: 0.01        # distribution with stdev 0.01 (default mean: 0)
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.1
    }}
}
layers {
    name: "relu3"
    type: RELU
    bottom: "conv3"
    top: "conv3"
}
layers {
  name: "fc1"
  type: INNER_PRODUCT
  #blobs_lr: 1.
  #blobs_lr: 2.
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  bottom: "conv3"
  top: "fc1"
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc1"
  bottom: "label"
  top: "loss"
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "fc1"
  bottom: "label"
  top: "accuracy"
  include{
    phase:TEST
  }
}
layers {
  name: "accuracy@3"
  type: ACCURACY
  bottom: "fc1"
  bottom: "label"
  top: "accuracy@3"
  include{
    phase:TEST
  }
  accuracy_param{
    top_k: 3
  }
}
layers {
  name: "accuracy@5"
  type: ACCURACY
  bottom: "fc1"
  bottom: "label"
  top: "accuracy@5"
  include{
    phase:TEST
  }
  accuracy_param{
    top_k: 5
  }
}
layers {
  name: "accuracy@10"
  type: ACCURACY
  bottom: "fc1"
  bottom: "label"
  top: "accuracy@10"
  include{
    phase:TEST
  }
  accuracy_param{
    top_k: 10
  }
}